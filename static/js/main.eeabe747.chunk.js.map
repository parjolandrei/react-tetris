{"version":3,"sources":["img/bg.png","components/styles/StyledCell.js","tetrominos.js","components/Cell.js","components/styles/StyledStage.js","components/Stage.js","components/styles/StyledDisplay.js","components/Display.js","components/styles/StyledStartButton.js","components/StartButton.js","gameHelpers.js","hooks/useStage.js","components/styles/StyledTetris.js","components/Tetris.js","hooks/usePlayer.js","hooks/useGameStatus.js","hooks/useInterval.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","StyledCell","styled","div","props","color","type","TETROMINOS","0","shape","I","J","L","O","S","T","Z","randomTetromino","randTetromino","Math","floor","random","length","React","memo","console","log","StyledStage","height","width","Stage","stage","map","row","cell","x","key","StyledDisplay","gameOver","Display","text","StyledStartButton","button","StartButton","callback","onClick","createStage","Array","from","fill","checkCollision","player","moveX","moveY","y","tetromino","pos","useStage","resetPlayer","useState","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","forEach","value","collided","reduce","ack","findIndex","prev","unshift","push","sweepRows","StyledTetrisWrapper","bgImage","StyledTetris","Tetris","dropTime","setDropTime","setGameOver","setPlayer","rotate","matrix","dir","rotatedTetro","_","index","col","reverse","useCallback","STAGE_WIDTH","clonedPlayer","JSON","parse","stringify","offset","usePlayer","updatePlayerPos","playerRotate","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","movePlayer","drop","move","keyCode","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","role","tabIndex","onKeyDown","e","onKeyUp","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.eeabe747.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.2810fe6b.png\";","import styled from \"styled-components\";\r\n\r\nexport const StyledCell=styled.div`\r\n    width : auto;\r\n    background: rgba(${props=>props.color},0.8);\r\n    border: ${props=>(props.type === 0? '0px solid' : '4px solid' )};\r\n    border-bottom-color: rgba(${props=>props.color},0.1);\r\n    border-right-color: rgba(${props=>props.color},1);\r\n    border-top-color: rgba(${props=>props.color},1);\r\n    border-left-color: rgba(${props=>props.color},0.3);\r\n`","export const TETROMINOS={\r\n    0:{shape:[[0]],color:'0,0,0'},\r\n    I:{\r\n        shape:[\r\n            [0,'I',0,0],\r\n            [0,'I',0,0],\r\n            [0,'I',0,0],\r\n            [0,'I',0,0],\r\n        ],color:'80,227,230',\r\n    },\r\n    J:{\r\n        shape:[\r\n            [0,'J',0],\r\n            [0,'J',0],\r\n            ['J','J',0],\r\n        ],color:'36,95,223',\r\n    },\r\n    L:{\r\n        shape:[\r\n            [0,'L',0],\r\n            [0,'L',0],\r\n            [0,'L','L'],\r\n        ],color:'223,173,36',\r\n    },\r\n    O:{\r\n        shape:[\r\n            ['O','O'],\r\n            ['O','O'],\r\n        ],color:'223,217,36',\r\n    },\r\n    S:{\r\n        shape:[\r\n            [0,'S','S'],\r\n            ['S','S',0],\r\n            [0,0,0],\r\n        ],color:'48,211,56',\r\n    },\r\n    T:{\r\n        shape:[\r\n            [0,0,0],\r\n            ['T','T','T'],\r\n            [0,'T',0],\r\n        ],color:'132,61,198',\r\n    },\r\n    Z:{\r\n        shape:[\r\n            ['Z','Z',0],\r\n            [0,'Z','Z'],\r\n            [0,0,0],\r\n        ],color:'227,78,78',\r\n    },\r\n}\r\n\r\nexport const randomTetromino=()=>{\r\n    const tetrominos='IJLOSTZ';\r\n    const randTetromino= tetrominos[Math.floor(Math.random()*tetrominos.length)];\r\n\r\n    return TETROMINOS[randTetromino];\r\n}","import React from \"react\";\r\nimport { StyledCell } from './styles/StyledCell';\r\nimport {TETROMINOS} from '../tetrominos';\r\n\r\nconst  Cell =({type})=>(\r\n    <StyledCell type={type} color={TETROMINOS[type].color}>\r\n        {console.log('render')}\r\n    </StyledCell>\r\n);\r\nexport default React.memo(Cell);","import styled from 'styled-components';\r\n\r\nexport const StyledStage=styled.div`\r\n    display: grid;\r\n    grid-template-rows:repeat( ${props=>props.height}, calc(25vw / ${props=>props.width}) );\r\n    grid-template-columns:repeat( ${props=>props.width}, 1fr);\r\n    grid-gap:1px;\r\n    border:2px solid #333;\r\n    width:100%;\r\n    max-width:25vw;\r\n    background:#111;\r\n`","import React from \"react\";\r\nimport Cell from \"./Cell\";\r\nimport {StyledStage} from './styles/StyledStage';\r\nconst Stage=({stage})=>(\r\n    <StyledStage width={stage[0].length} height={stage.length}>\r\n        {stage.map(row=>row.map((cell,x)=><Cell key={x} type={cell[0]}/>))}\r\n    </StyledStage>\r\n)\r\n\r\nexport default Stage;","import styled from 'styled-components';\r\n\r\nexport const StyledDisplay = styled.div`\r\n    box-sizing: border-box;\r\n    display:flex;\r\n    align-items:center;\r\n    margin: 0 0 20px 0;\r\n    padding:20px;\r\n    border: 4px solid #333;\r\n    min-height:30px;\r\n    width:100%;\r\n    border-radius:20px;\r\n    color: ${props=> (props.gameOver?'red':'#999')};\r\n    background: #000;\r\n    font-family:Pixel,Arial;\r\n    font-size: 0.8rem;\r\n`","import React from \"react\";\r\nimport {StyledDisplay} from './styles/StyledDisplay';\r\nconst Display=({gameOver,text})=>(\r\n    <StyledDisplay gameOver={gameOver}>\r\n        {text}\r\n    </StyledDisplay>\r\n);\r\n\r\nexport default Display;","import styled from 'styled-components';\r\n\r\nexport const StyledStartButton = styled.button`\r\n    box-sizing: border-box;\r\n    margin:0 0 20px 0;\r\n    padding:20px;\r\n    min-height:30px;\r\n    width:100%;\r\n    border-radius:20px;\r\n    border:none;\r\n    backgorund-color:#000;\r\n    font-family: Pixel , Arial;\r\n    font-size:1rem;\r\n    outline:none;\r\n    cursor:pointer;\r\n`","import React from \"react\";\r\nimport {StyledStartButton} from './styles/StyledStartButton';\r\n\r\nconst StartButton=({callback})=>(\r\n    <StyledStartButton onClick={callback}>\r\n        StartGame!\r\n        </StyledStartButton>\r\n);\r\n\r\nexport default StartButton;","\r\nexport const STAGE_WIDTH=12;\r\nexport const STAGE_HEIGHT=20;\r\n\r\nexport const createStage=()=>Array.from(Array(STAGE_HEIGHT),()=>new Array(STAGE_WIDTH).fill([0,'clear']));\r\n\r\nexport const checkCollision= (player,stage,{x:moveX,y:moveY})=>{\r\n    for(let y=0;y<player.tetromino.length;y++)\r\n        for(let x=0;x<player.tetromino[y].length;x++){\r\n            if(player.tetromino[y][x] !== 0){\r\n                if(\r\n                !stage[y+player.pos.y +moveY] \r\n                ||\r\n                !stage[y+player.pos.y +moveY][x+player.pos.x+moveX]\r\n                ||\r\n                stage[y+player.pos.y +moveY][x+player.pos.x+moveX][1]!=='clear'\r\n                ){\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n}","import {useState,useEffect} from 'react';\r\nimport {createStage} from '../gameHelpers';\r\n\r\nexport const useStage =(player,resetPlayer)=>{\r\n    const [stage,setStage]=useState(createStage());\r\n    const [rowsCleared,setRowsCleared]=useState(0);\r\n    useEffect(()=>{\r\n        setRowsCleared(0);\r\n\r\n        const sweepRows=newStage=>\r\n        newStage.reduce((ack,row)=>{\r\n            if(row.findIndex(cell=> cell[0]===0)===-1){\r\n                setRowsCleared(prev=>prev+1);\r\n                ack.unshift(new Array(newStage[0].length).fill([0,'clear']));\r\n                return ack;\r\n            }\r\n            ack.push(row);\r\n            return ack;\r\n        },[]);\r\n        const updateStage=prevStage=>{\r\n            const newStage=prevStage.map(row=>\r\n                row.map(cell=>(cell[1]==='clear'?[0,'clear']:cell))\r\n                )\r\n            \r\n                player.tetromino.forEach((row,y) => {\r\n                        row.forEach((value,x)=>{\r\n                            if(value!==0){\r\n                                newStage[y+player.pos.y][x+player.pos.x]=[\r\n                                    value,`${player.collided?'merged':'clear'}`\r\n                                ]\r\n                            }\r\n                        })\r\n                });\r\n                if(player.collided){\r\n                    resetPlayer();\r\n                    return sweepRows(newStage);\r\n                }\r\n            return newStage;\r\n        }\r\n\r\n        setStage(prev=>updateStage(prev));\r\n    },[player]);\r\n\r\n    return [stage,setStage,rowsCleared];\r\n}","import styled from \"styled-components\";\r\nimport bgImage from '../../img/bg.png';\r\n\r\nexport const StyledTetrisWrapper=styled.div`\r\n    width:100vw;\r\n    height:100vh;\r\n    background: url(${bgImage}) #000;\r\n    background-size : cover;\r\n    overflow: hidden;\r\n`;\r\n\r\nexport const StyledTetris=styled.div`\r\n    display: flex;\r\n    align-items: flex-start;\r\n    padding:40px;\r\n    margin: 0 auto;\r\n    max-width:900px;\r\n\r\n    aside{\r\n        width:100%;\r\n        max-width:200px;\r\n        display:block;\r\n        padding:0 20px;\r\n    }\r\n`","import React,{useState} from \"react\";\r\nimport Stage from \"./Stage\";\r\nimport Display from './Display';\r\nimport StartButton from './StartButton';\r\nimport {useInterval} from '../hooks/useInterval'\r\nimport {usePlayer} from '../hooks/usePlayer';\r\nimport {useStage} from '../hooks/useStage';\r\nimport {createStage,checkCollision} from '../gameHelpers';\r\nimport {StyledTetris,StyledTetrisWrapper} from './styles/StyledTetris';\r\nimport {useGameStatus} from '../hooks/useGameStatus';\r\nconst Tetris = ()=>{\r\n\r\n    const [dropTime,setDropTime] = useState(null);\r\n    const [gameOver,setGameOver] = useState(false);\r\n    const [player,updatePlayerPos,resetPlayer,playerRotate]=usePlayer();\r\n    const [stage,setStage,rowsCleared]=useStage(player,resetPlayer);\r\n    const [score,setScore,rows,setRows,level,setLevel]=useGameStatus(rowsCleared);\r\n\r\n    console.log('re-render');\r\n\r\n    const movePlayer=(dir)=>{\r\n        if(!checkCollision(player,stage,{x:dir,y:0}))\r\n        updatePlayerPos({x:dir,y:0});\r\n    }\r\n\r\n    const startGame = ()=>{\r\n        //reset\r\n        setStage(createStage());\r\n        resetPlayer();\r\n        setGameOver(false);\r\n        setDropTime(1000);\r\n        setScore(0);\r\n        setRows(0);\r\n        setLevel(0);\r\n    }\r\n\r\n    const drop =()=>{\r\n        if(rows>(level+1)*10){\r\n            setLevel(prev=>prev+1);\r\n            setDropTime(1000/(level+1)+200);\r\n        }\r\n        if(!checkCollision(player,stage,{x:0,y:1}))\r\n        updatePlayerPos({x:0,y:1,collided:false});\r\n        else{\r\n            if(player.pos.y<1){\r\n                setGameOver(true);\r\n                setDropTime(null);\r\n            }\r\n        updatePlayerPos({x:0,y:0,collided:true});}\r\n    }\r\n\r\n    const keyUp = ({keyCode})=>{\r\n        if(!gameOver){\r\n            if(keyCode===40){\r\n                setDropTime(1000/(level+1)+200);\r\n            }\r\n        }\r\n    }\r\n\r\n    const dropPlayer=()=>{\r\n        setDropTime(null);\r\n        drop();\r\n\r\n    }\r\n\r\n    const move=({keyCode})=>{\r\n        if(!gameOver){\r\n            if(keyCode === 37){\r\n                movePlayer(-1);\r\n            }\r\n            if(keyCode === 39){\r\n                movePlayer(1);\r\n            }\r\n            if(keyCode === 40){\r\n                dropPlayer();\r\n            }\r\n            if(keyCode === 38){\r\n                playerRotate(stage,1);\r\n            }\r\n        }\r\n    }\r\n\r\n    useInterval(()=>{\r\n        drop();\r\n    },dropTime);\r\n    return (\r\n        <StyledTetrisWrapper role='button' tabIndex='0' onKeyDown={e=>move(e)} onKeyUp={keyUp}>\r\n            <StyledTetris>\r\n            <Stage stage={stage} />\r\n            <aside>\r\n                {gameOver && <Display text='Game Over' gameOver={gameOver}/>}\r\n                { !gameOver &&\r\n                <div>\r\n                <Display text={`Score: ${score}`}/>\r\n                <Display text={`Rows: ${rows}`}/>\r\n                <Display text={`Level: ${level}`}/>\r\n                </div>}\r\n                <StartButton callback={startGame}/>\r\n            </aside>\r\n            </StyledTetris>\r\n            </StyledTetrisWrapper>\r\n    )\r\n}\r\n\r\nexport default Tetris;","import {useState,useCallback, cloneElement} from 'react';\r\n\r\nimport { TETROMINOS, randomTetromino} from '../tetrominos';\r\nimport { STAGE_WIDTH, checkCollision } from '../gameHelpers';\r\n\r\nexport const usePlayer=()=>{\r\n    const [player,setPlayer] = useState({\r\n        pos:{x:0,y:0},\r\n        tetromino:TETROMINOS[0].shape,\r\n        collided:false,\r\n    });\r\n\r\n    const rotate=(matrix,dir)=>{\r\n        const rotatedTetro=matrix.map((_,index)=>matrix.map(col=>col[index]))\r\n        \r\n        if(dir>0)\r\n        return rotatedTetro.map(row=>row.reverse());\r\n        return rotatedTetro.reverse();\r\n    }\r\n\r\n    const playerRotate=(stage,dir)=>{\r\n        const clonedPlayer=JSON.parse(JSON.stringify(player));\r\n\r\n        clonedPlayer.tetromino = rotate(clonedPlayer.tetromino,dir);\r\n\r\n        const pos = clonedPlayer.pos.x;\r\n        let offset=1;\r\n\r\n        while(checkCollision(clonedPlayer,stage,{x:0,y:0})){\r\n            clonedPlayer.pos.x+=offset;\r\n            offset=-(offset+ (offset>0?+1:-1));\r\n            if(offset>clonedPlayer.tetromino[0].length)\r\n            {\r\n                rotate(clonedPlayer.tetromino,-dir);\r\n                clonedPlayer.pos.x=pos;\r\n                return;\r\n            }\r\n        }\r\n        setPlayer(clonedPlayer);\r\n    }\r\n\r\n    const updatePlayerPos=({x,y,collided})=>{\r\n        setPlayer(prev=>({\r\n            ...prev,\r\n            pos:{x: (prev.pos.x+x),y: prev.pos.y+y},\r\n            collided,\r\n        }))\r\n    }\r\n\r\n    const resetPlayer = useCallback(()=>{\r\n        setPlayer({\r\n            pos:{x:STAGE_WIDTH/2-2,y:0},\r\n            tetromino:randomTetromino().shape,\r\n            collided:false,\r\n        })\r\n    },[]);\r\n\r\n    return [player,updatePlayerPos,resetPlayer,playerRotate];\r\n}","import {useState,useEffect,useCallback} from 'react';\r\n\r\nexport const useGameStatus=rowsCleared=>{\r\n    const [score,setScore]=useState(0);\r\n    const [rows,setRows]=useState(0);\r\n    const [level,setLevel]=useState(0);\r\n\r\n    const linePoints = [40,100,300,1200];\r\n\r\n    const calcScore= useCallback(()=>{\r\n        if(rowsCleared>0){\r\n            setScore(prev=>prev+ linePoints[rowsCleared-1]*(level+1));\r\n            setRows(prev=>prev+rowsCleared);\r\n        }\r\n    },[level,linePoints,rowsCleared]);\r\n\r\n    useEffect(()=>{\r\n        calcScore();\r\n    },[calcScore,rowsCleared,score]);\r\n\r\n    return [score,setScore,rows,setRows,level,setLevel];\r\n}","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from \"react\";\nimport  Tetris  from \"./components/Tetris\";\n\nconst App = (props)=>(\n  <div className='App'>\n    <Tetris/>\n  </div>\n);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}